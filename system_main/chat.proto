syntax = "proto3";

package chat;

import "google/protobuf/empty.proto";

// ─── Authentication ───────────────────────────────────────────────────────────

message CreateUserRequest {
  string username = 1;
  string hashed_password = 2;
  string display_name = 3;
}
message CreateUserResponse {
  string status = 1;   // "success", "error", or "user_exists"
  string message = 2;
  string username = 3;
}

message LoginRequest {
  string username = 1;
  string hashed_password = 2;
}
message LoginResponse {
  string status = 1;   // "success" or "error"
  string message = 2;
}

message LogoutRequest { string username = 1; }
message LogoutResponse { string status = 1; string message = 2; }

// ─── 2nd‑Price Auction ───────────────────────────────────────────────────────

message StartAuctionRequest {
  string auction_id       = 1;
  int64  duration_seconds = 2;
  string item_name        = 3;
}
message StartAuctionResponse {
  string status  = 1;
  string message = 2;
}

message SubmitBidRequest {
  string auction_id = 1;
  string bidder_id  = 2;
  double amount     = 3;
}
message SubmitBidResponse {
  string status  = 1;
  string message = 2;
}

message EndAuctionRequest { string auction_id = 1; }
message EndAuctionResponse { string status = 1; string message = 2; }

message GetWinnerRequest { string auction_id = 1; }
message GetWinnerResponse {
  string status      = 1;
  string message     = 2;
  string winner_id   = 3;
  double winning_bid = 4;
  double price       = 5;
}

// ─── Listing ──────────────────────────────────────────────────────────────────

message AuctionInfo {
  string auction_id = 1;
  string item_name  = 2;
  bool   ended      = 3;
  int64  time_left  = 4;
}
message ListAuctionsResponse {
  repeated AuctionInfo auctions = 1;
}

// ─── Services ────────────────────────────────────────────────────────────────

service AuthService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc Login     (LoginRequest)       returns (LoginResponse);
  rpc Logout    (LogoutRequest)      returns (LogoutResponse);
}

service AuctionService {
  rpc StartAuction   (StartAuctionRequest)   returns (StartAuctionResponse);
  rpc SubmitBid      (SubmitBidRequest)      returns (SubmitBidResponse);
  rpc EndAuction     (EndAuctionRequest)     returns (EndAuctionResponse);
  rpc GetWinner      (GetWinnerRequest)      returns (GetWinnerResponse);
  rpc ListAuctions   (google.protobuf.Empty) returns (ListAuctionsResponse);
}
